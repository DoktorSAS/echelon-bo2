#ifndef __DB_PUBLIC_H__
#define __DB_PUBLIC_H__

#include "../export.h"

enum XAssetType
{
	ASSET_TYPE_XMODELPIECES = 0x0,
	ASSET_TYPE_PHYSPRESET = 0x1,
	ASSET_TYPE_PHYSCONSTRAINTS = 0x2,
	ASSET_TYPE_DESTRUCTIBLEDEF = 0x3,
	ASSET_TYPE_XANIM = 0x4,
	ASSET_TYPE_XMODEL = 0x5,
	ASSET_TYPE_MATERIAL = 0x6,
	ASSET_TYPE_PIXELSHADER = 0x7,
	ASSET_TYPE_VERTEXSHADER = 0x8,
	ASSET_TYPE_TECHSET = 0x9,
	ASSET_TYPE_IMAGE = 0xA,
	ASSET_TYPE_SOUND = 0xB,
	ASSET_TYPE_SOUND_PATCH = 0xC,
	ASSET_TYPE_COL_MAP_SP = 0xD,
	ASSET_TYPE_COL_MAP_MP = 0xE,
	ASSET_TYPE_COM_MAP = 0xF,
	ASSET_TYPE_GAME_MAP_SP = 0x10,
	ASSET_TYPE_GAME_MAP_MP = 0x11,
	ASSET_TYPE_MAP_ENTS = 0x12,
	ASSET_TYPE_GFX_MAP = 0x13,
	ASSET_TYPE_LIGHTDEF = 0x14,
	ASSET_TYPE_UI_MAP = 0x15,
	ASSET_TYPE_FONT = 0x16,
	ASSET_TYPE_FONTICON = 0x17,
	ASSET_TYPE_MENUFILE = 0x18,
	ASSET_TYPE_MENU = 0x19,
	ASSET_TYPE_LOCALIZE = 0x1A,
	ASSET_TYPE_WEAPON = 0x1B,
	ASSET_TYPE_WEAPONDEF = 0x1C,
	ASSET_TYPE_WEAPONVARIANT = 0x1D,
	ASSET_TYPE_WEAPONFULL = 0x1E,
	ASSET_TYPE_ATTACHMENT = 0x1F,
	ASSET_TYPE_ATTACHMENTUNIQUE = 0x20,
	ASSET_TYPE_WEAPONCAMO = 0x21,
	ASSET_TYPE_SNDDRIVERGLOBALS = 0x22,
	ASSET_TYPE_FX = 0x23,
	ASSET_TYPE_IMPACTFX = 0x24,
	ASSET_TYPE_AITYPE = 0x25,
	ASSET_TYPE_MPTYPE = 0x26,
	ASSET_TYPE_MPBODY = 0x27,
	ASSET_TYPE_MPHEAD = 0x28,
	ASSET_TYPE_CHARACTER = 0x29,
	ASSET_TYPE_XMODELALIAS = 0x2A,
	ASSET_TYPE_RAWFILE = 0x2B,
	ASSET_TYPE_STRINGTABLE = 0x2C,
	ASSET_TYPE_LEADERBOARDDEF = 0x2D,
	ASSET_TYPE_XGLOBALS = 0x2E,
	ASSET_TYPE_DDL = 0x2F,
	ASSET_TYPE_GLASSES = 0x30,
	ASSET_TYPE_TEXTURELIST = 0x31,
	ASSET_TYPE_EMBLEMSET = 0x32,
	ASSET_TYPE_SCRIPTPARSETREE = 0x33,
	ASSET_TYPE_KEYVALUEPAIRS = 0x34,
	ASSET_TYPE_VEHICLE = 0x35,
	ASSET_TYPE_MEMORYBLOCK = 0x36,
	ASSET_TYPE_ADDON_MAP_ENTS = 0x37,
	ASSET_TYPE_TRACER = 0x38,
	ASSET_TYPE_SKINNEDVERTS = 0x39,
	ASSET_TYPE_QDB = 0x3A,
	ASSET_TYPE_SLUG = 0x3B,
	ASSET_TYPE_FOOTSTEPTABLE = 0x3C,
	ASSET_TYPE_FOOTSTEPFXTABLE = 0x3D,
	ASSET_TYPE_ZBARRIER = 0x3E,
	ASSET_TYPE_STRING = 0x3F,
	ASSET_TYPE_ASSETLIST = 0x40,
	ASSET_TYPE_REPORT = 0x41,
	ASSET_TYPE_DEPEND = 0x42,
};

struct ScriptParseTree
{
	const char *name;
	int len;
	const unsigned char *buffer;
};

struct RawFile
{
	const char *name;
	int len;
	const char *buffer;
};

union XAssetHeader
{
	ScriptParseTree* scriptParseTree;
	RawFile* rawFile;
	void* data;
};

// db_registry.cpp

GAME_EXPORT void DB_FindXAssetHeader(XAssetHeader* out, XAssetType type, const char* name, bool errorIfMissing, int waitTime);
GAME_EXPORT void DB_AllocXAssetHeader(XAssetHeader* out, XAssetType type);

#endif /* __DB_PUBLIC_H__ */
